
/home/arran/Documents/projects/games/NationStateSDL/source/MainGameLoop.cpp: In function ‘int MainGameLoop::initGame(SDL_Renderer*)’:
/home/arran/Documents/projects/games/NationStateSDL/source/MainGameLoop.cpp:23:33: error: no matching function for call to ‘std::unordered_map<int, std::unique_ptr<renderableObject> >::insert(std::unordered_map<int, std::unique_ptr<renderableObject> >::iterator, std::vector<IsoTileMap*>::iterator, std::vector<IsoTileMap*>::iterator)’
   23 |         renderableObjects.insert(renderableObjects.end(),chunkCache.begin(),chunkCache.end());
      |         ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/arran/Documents/projects/games/NationStateSDL/source/MainGameLoop.cpp:23:33: note: there are 10 candidates
In file included from /usr/include/c++/15.1.1/unordered_map:43,
                 from /home/arran/Documents/projects/games/NationStateSDL/source/InputManager.h:7,
                 from /home/arran/Documents/projects/games/NationStateSDL/source/CameraSystem.h:4,
                 from /home/arran/Documents/projects/games/NationStateSDL/source/Texture2D.h:8,
                 from /home/arran/Documents/projects/games/NationStateSDL/source/Tile.h:6,
                 from /home/arran/Documents/projects/games/NationStateSDL/source/TileMap.h:6,
                 from /home/arran/Documents/projects/games/NationStateSDL/source/ChunkManager.h:6,
                 from /home/arran/Documents/projects/games/NationStateSDL/source/MainGameLoop.h:6,
                 from /home/arran/Documents/projects/games/NationStateSDL/source/MainGameLoop.cpp:2:
/usr/include/c++/15.1.1/bits/unordered_map.h:617:9: note: candidate 1: ‘template<class _Pair> std::__enable_if_t<((bool)std::is_constructible<typename std::_Hashtable<_Key, std::pair<const _Key, _Val>, _Alloc, std::__detail::_Select1st, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Key&> > >::value, false, true> >::value_type, _Pair&&>::value), std::pair<typename std::_Hashtable<_Key, std::pair<const _Key, _Val>, _Alloc, std::__detail::_Select1st, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Key&> > >::value, false, true> >::iterator, bool> > std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(_Pair&&) [with _Key = int; _Tp = std::unique_ptr<renderableObject>; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >]’
  617 |         insert(_Pair&& __x)
      |         ^~~~~~
/usr/include/c++/15.1.1/bits/unordered_map.h:617:9: note: candidate expects 1 argument, 3 provided
/usr/include/c++/15.1.1/bits/unordered_map.h:655:9: note: candidate 2: ‘template<class _Pair> std::__enable_if_t<((bool)std::is_constructible<typename std::_Hashtable<_Key, std::pair<const _Key, _Val>, _Alloc, std::__detail::_Select1st, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Key&> > >::value, false, true> >::value_type, _Pair&&>::value), typename std::_Hashtable<_Key, std::pair<const _Key, _Val>, _Alloc, std::__detail::_Select1st, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Key&> > >::value, false, true> >::iterator> std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(const_iterator, _Pair&&) [with _Key = int; _Tp = std::unique_ptr<renderableObject>; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >]’
  655 |         insert(const_iterator __hint, _Pair&& __x)
      |         ^~~~~~
/usr/include/c++/15.1.1/bits/unordered_map.h:655:9: note: candidate expects 2 arguments, 3 provided
/usr/include/c++/15.1.1/bits/unordered_map.h:670:9: note: candidate 3: ‘template<class _InputIterator> void std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(_InputIterator, _InputIterator) [with _Key = int; _Tp = std::unique_ptr<renderableObject>; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >]’
  670 |         insert(_InputIterator __first, _InputIterator __last)
      |         ^~~~~~
/usr/include/c++/15.1.1/bits/unordered_map.h:670:9: note: candidate expects 2 arguments, 3 provided
/usr/include/c++/15.1.1/bits/unordered_map.h:491:7: note: candidate 4: ‘std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert_return_type std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(node_type&&) [with _Key = int; _Tp = std::unique_ptr<renderableObject>; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >; insert_return_type = std::_Hashtable<int, std::pair<const int, std::unique_ptr<renderableObject> >, std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::insert_return_type; node_type = std::_Hashtable<int, std::pair<const int, std::unique_ptr<renderableObject> >, std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::node_type]’
  491 |       insert(node_type&& __nh)
      |       ^~~~~~
/usr/include/c++/15.1.1/bits/unordered_map.h:491:7: note: candidate expects 1 argument, 3 provided
/usr/include/c++/15.1.1/bits/unordered_map.h:496:7: note: candidate 5: ‘std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(const_iterator, node_type&&) [with _Key = int; _Tp = std::unique_ptr<renderableObject>; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >; iterator = std::_Hashtable<int, std::pair<const int, std::unique_ptr<renderableObject> >, std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::iterator; const_iterator = std::_Hashtable<int, std::pair<const int, std::unique_ptr<renderableObject> >, std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator; node_type = std::_Hashtable<int, std::pair<const int, std::unique_ptr<renderableObject> >, std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::node_type]’
  496 |       insert(const_iterator, node_type&& __nh)
      |       ^~~~~~
/usr/include/c++/15.1.1/bits/unordered_map.h:496:7: note: candidate expects 2 arguments, 3 provided
/usr/include/c++/15.1.1/bits/unordered_map.h:605:7: note: candidate 6: ‘std::pair<typename std::_Hashtable<_Key, std::pair<const _Key, _Val>, _Alloc, std::__detail::_Select1st, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Key&> > >::value, false, true> >::iterator, bool> std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(const value_type&) [with _Key = int; _Tp = std::unique_ptr<renderableObject>; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >; typename std::_Hashtable<_Key, std::pair<const _Key, _Val>, _Alloc, std::__detail::_Select1st, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Key&> > >::value, false, true> >::iterator = std::_Hashtable<int, std::pair<const int, std::unique_ptr<renderableObject> >, std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::iterator; value_type = std::pair<const int, std::unique_ptr<renderableObject> >]’
  605 |       insert(const value_type& __x)
      |       ^~~~~~
/usr/include/c++/15.1.1/bits/unordered_map.h:605:7: note: candidate expects 1 argument, 3 provided
/usr/include/c++/15.1.1/bits/unordered_map.h:611:7: note: candidate 7: ‘std::pair<typename std::_Hashtable<_Key, std::pair<const _Key, _Val>, _Alloc, std::__detail::_Select1st, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Key&> > >::value, false, true> >::iterator, bool> std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(value_type&&) [with _Key = int; _Tp = std::unique_ptr<renderableObject>; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >; typename std::_Hashtable<_Key, std::pair<const _Key, _Val>, _Alloc, std::__detail::_Select1st, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Key&> > >::value, false, true> >::iterator = std::_Hashtable<int, std::pair<const int, std::unique_ptr<renderableObject> >, std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::iterator; value_type = std::pair<const int, std::unique_ptr<renderableObject> >]’
  611 |       insert(value_type&& __x)
      |       ^~~~~~
/usr/include/c++/15.1.1/bits/unordered_map.h:611:7: note: candidate expects 1 argument, 3 provided
/usr/include/c++/15.1.1/bits/unordered_map.h:644:7: note: candidate 8: ‘std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(const_iterator, const value_type&) [with _Key = int; _Tp = std::unique_ptr<renderableObject>; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >; iterator = std::_Hashtable<int, std::pair<const int, std::unique_ptr<renderableObject> >, std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::iterator; const_iterator = std::_Hashtable<int, std::pair<const int, std::unique_ptr<renderableObject> >, std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator; value_type = std::pair<const int, std::unique_ptr<renderableObject> >]’
  644 |       insert(const_iterator __hint, const value_type& __x)
      |       ^~~~~~
/usr/include/c++/15.1.1/bits/unordered_map.h:644:7: note: candidate expects 2 arguments, 3 provided
/usr/include/c++/15.1.1/bits/unordered_map.h:650:7: note: candidate 9: ‘std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::iterator std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(const_iterator, value_type&&) [with _Key = int; _Tp = std::unique_ptr<renderableObject>; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >; iterator = std::_Hashtable<int, std::pair<const int, std::unique_ptr<renderableObject> >, std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::iterator; const_iterator = std::_Hashtable<int, std::pair<const int, std::unique_ptr<renderableObject> >, std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::const_iterator; value_type = std::pair<const int, std::unique_ptr<renderableObject> >]’
  650 |       insert(const_iterator __hint, value_type&& __x)
      |       ^~~~~~
/usr/include/c++/15.1.1/bits/unordered_map.h:650:7: note: candidate expects 2 arguments, 3 provided
/usr/include/c++/15.1.1/bits/unordered_map.h:681:7: note: candidate 10: ‘void std::unordered_map<_Key, _Tp, _Hash, _Pred, _Alloc>::insert(std::initializer_list<typename std::_Hashtable<_Key, std::pair<const _Key, _Val>, _Alloc, std::__detail::_Select1st, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Key&> > >::value, false, true> >::value_type>) [with _Key = int; _Tp = std::unique_ptr<renderableObject>; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<std::pair<const int, std::unique_ptr<renderableObject> > >; typename std::_Hashtable<_Key, std::pair<const _Key, _Val>, _Alloc, std::__detail::_Select1st, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Key&> > >::value, false, true> >::value_type = std::pair<const int, std::unique_ptr<renderableObject> >]’
  681 |       insert(initializer_list<value_type> __l)
      |       ^~~~~~
/usr/include/c++/15.1.1/bits/unordered_map.h:681:7: note: candidate expects 1 argument, 3 provided
